/*_############################################################################
  _##
  _##  AGENT++ 4.5 - cmake_libagent.h.in
  _##
  _##  Copyright (C) 2000-2021  Frank Fock and Jochen Katz (agentpp.com)
  _##
  _##  Licensed under the Apache License, Version 2.0 (the "License");
  _##  you may not use this file except in compliance with the License.
  _##  You may obtain a copy of the License at
  _##
  _##      http://www.apache.org/licenses/LICENSE-2.0
  _##
  _##  Unless required by applicable law or agreed to in writing, software
  _##  distributed under the License is distributed on an "AS IS" BASIS,
  _##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  _##  See the License for the specific language governing permissions and
  _##  limitations under the License.
  _##
  _##########################################################################*/
#ifndef __LIBAGENT_H_INCLUDED__
#define __LIBAGENT_H_INCLUDED__

#ifdef _WIN32
#define NOMINMAX
#endif

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#cmakedefine CNF_HAVE_SYS_TYPES_H
#ifdef CNF_HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#cmakedefine CNF_HAVE_SYS_STAT_H
#ifdef CNF_HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif

#include <cctype>
#include <cerrno>
#include <cinttypes>
#include <climits>
#include <csignal>
#include <cstddef>
#include <cstdint>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <memory>
#include <string> // std::stoi() used

#cmakedefine CNF_HAVE_UNISTD_H
#cmakedefine CNF_HAVE_SYS_UNISTD_H
#ifdef CNF_HAVE_UNISTD_H
# include <unistd.h>
#else
# ifdef CNF_HAVE_SYS_UNISTD_H
#  include <sys/unistd.h>
# endif
#endif

#cmakedefine CNF_HAVE_SYS_TIME_H
#ifdef CNF_HAVE_SYS_TIME_H
#include <sys/time.h>
#endif
#cmakedefine CNF_HAVE_SYS_TIMEB_H
#ifdef CNF_HAVE_SYS_TIMEB_H
#include <sys/timeb.h> // and _ftime
#endif

#cmakedefine CNF_HAVE_WINSOCK2_H
#cmakedefine CNF_HAVE_WS2TCPIP_H
#cmakedefine CNF_HAVE_WSPIAPI_H
#cmakedefine CNF_HAVE_NETDB_H
#cmakedefine CNF_HAVE_SYS_SOCKET_H
#cmakedefine CNF_HAVE_ARPA_INET_H
#cmakedefine CNF_HAVE_NETINET_IN_H

#ifdef CNF_HAVE_WINSOCK2_H
# include <winsock2.h>
# ifdef CNF_HAVE_WS2TCPIP_H
#  include <ws2tcpip.h>
# endif
# ifdef CNF_HAVE_WSPIAPI_H
#  include <wspiapi.h>
# endif
#else
# ifdef CNF_HAVE_NETDB_H
#  include <netdb.h>
# endif
# ifdef CNF_HAVE_SYS_SOCKET_H
#  include <sys/socket.h>
# endif
# ifdef CNF_HAVE_ARPA_INET_H
#  include <arpa/inet.h>
# endif
# ifdef CNF_HAVE_NETINET_IN_H
#  include <netinet/in.h>
# endif
#endif

#cmakedefine CNF_HAVE_POLL_H
#cmakedefine CNF_HAVE_SYS_SELECT_H
#ifdef CNF_HAVE_POLL_H
# include <poll.h>
#endif
#ifdef CNF_HAVE_SYS_SELECT_H
# include <sys/select.h>
#endif

#cmakedefine CNF_HAVE_IO_H
#cmakedefine CNF_HAVE_PROCESS_H
#ifdef _WIN32
# ifdef CNF_HAVE_IO_H
#  include <io.h>
# endif
# ifdef CNF_HAVE_PROCESS_H
#  include <process.h>
# endif
# include <windows.h>
#endif

#cmakedefine CNF_HAVE_GETPID
#cmakedefine CNF_HAVE__GETPID
#if !defined(CNF_HAVE_GETPID)
# ifdef CNF_HAVE__GETPID
#  define getpid _getpid
# endif
#endif

#cmakedefine CNF_HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY

#include <snmp_pp/config_snmp_pp.h>
#include <snmp_pp/log.h>
#ifdef _THREADS
#ifndef _WIN32THREADS
#include <pthread.h>
#endif
#endif

#include <agent_pp/agent++.h>

#endif /* __LIBAGENT_H_INCLUDED__ */
